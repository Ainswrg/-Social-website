{"version":3,"sources":["components/Main/Dialogs/Message/chatList/Avatar.js","components/Main/Dialogs/Message/chatContent/ChatItem.js","components/Main/Dialogs/Message/chatContent/ChatForm.jsx","components/Main/Dialogs/Message/chatContent/ChatContent.js","components/Main/Dialogs/Message/chatList/ChatListItems.js","components/Main/Dialogs/Message/chatList/ChatList.js","components/Main/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Main/Dialogs/DialogsContainer.jsx"],"names":["Avatar","props","className","src","this","image","alt","isOnline","Component","ChatItem","style","animationDelay","user","msg","validationPost","Yup","newMessageBody","max","required","ChatForm","enableReinitialize","initialValues","validationSchema","onSubmit","addNewMessage","FormikField","type","placeholder","name","id","ChatContent","messagesEndRef","createRef","vh","dialogPage","messages","map","itm","index","key","ref","values","setSubmitting","sendMessage","scrollToBottom","current","scrollIntoView","behavior","ChatListItems","selectChat","e","currentTarget","parentNode","children","length","classList","remove","add","onClick","active","ChatList","allChatUsers","state","allChats","item","Dialogs","primary","mapStateToPropsForRedirect","isAuth","auth","compose","RedirectComponent","to","React","connect","dispatch","sendMessageCreator"],"mappings":"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","file":"static/js/4.8f615316.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Avatar extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div className=\"avatar\">\n        <div className=\"avatar-img\">\n          <img src={this.props.image} alt=\"#\" />\n        </div>\n        <span className={`isOnline ${this.props.isOnline}`}></span>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { StyledChatItem, StyledContentItems } from \"../../../../Styles\";\nimport Avatar from \"../chatList/Avatar\";\n\nexport default class ChatItem extends Component {\n   constructor(props) {\n      super(props);\n   }\n   render() {\n      return (\n         <StyledContentItems>\n            <div\n               style={{ animationDelay: `0.8s` }}\n               className={`chat__item ${\n                  this.props.user ? this.props.user : \"\"\n               }`}\n            >\n               <div className=\"chat__item__content\">\n                  <div className=\"chat__msg\">{this.props.msg}</div>\n                  <div className=\"chat__meta\">\n                     <span>16 mins ago</span>\n                     <span>Seen 1.03PM</span>\n                  </div>\n               </div>\n               <Avatar isOnline=\"active\" image={this.props.image} />\n            </div>\n         </StyledContentItems>\n      );\n   }\n}\n","import React from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport FormikField from \"../../../../shared/FormikField/FormikField\";\r\nimport {\r\n   ChatButton,\r\n   StyledIconPaperPlane,\r\n   StyledIconPlus,\r\n   ChatFormContainer,\r\n   StyledField\r\n} from \"../../../../Styles\";\r\n\r\nconst validationPost = Yup.object({\r\n   newMessageBody: Yup.string()\r\n      .max(15, \"Must be 15 characters or less\")\r\n      .required(\"Required\"),\r\n});\r\n\r\nconst ChatForm = (props) => {\r\n   return (\r\n      <>\r\n         <Formik\r\n            enableReinitialize\r\n            initialValues={{\r\n               newMessageBody: \"\",\r\n            }}\r\n            validationSchema={validationPost}\r\n            onSubmit={props.addNewMessage}\r\n         >\r\n               <Form>\r\n                  <ChatFormContainer>\r\n                        <ChatButton>\r\n                           <StyledIconPlus />\r\n                        </ChatButton>\r\n                        \r\n                        <StyledField>\r\n                        \r\n                           <FormikField\r\n                              type=\"textarea\"\r\n                              placeholder=\"Type a message here\"\r\n                              name=\"newMessageBody\"\r\n                           />\r\n                        </StyledField>\r\n                        \r\n                        <ChatButton id=\"sendMsgBtn\">\r\n                           <StyledIconPaperPlane />\r\n                        </ChatButton>\r\n                  </ChatFormContainer>\r\n               </Form>\r\n         </Formik>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default ChatForm;\r\n","import React, { createRef } from \"react\";\nimport Avatar from \"../chatList/Avatar\";\nimport ChatItem from \"./ChatItem\";\nimport {\n   StyledChatContainer,\n   ChattingUser,\n   ChatBody,\n   ChatFooter,\n   ChatHeader,\n   StyledIconSetting,\n   SettingButton,\n} from \"../../../../Styles\";\nimport ChatForm from \"./ChatForm\";\n\n\nconst ChatContent = (props) => {\n   const scrollToBottom = () => {\n      messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n   };\n\n   const handleSubmit = (values, {setSubmitting}) => {\n      props.sendMessage(values.newMessageBody);\n      values.newMessageBody = \"\";\n      setSubmitting(false);\n   }\n   const messagesEndRef = createRef(null);\n\n   return (\n      <StyledChatContainer>\n      <ChatHeader>\n         <ChattingUser>\n            <Avatar\n               isOnline=\"active\"\n               image=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTA78Na63ws7B7EAWYgTr9BxhX_Z8oLa1nvOA&usqp=CAU\"\n            />\n            <p>Tim Hover</p>\n         </ChattingUser>\n         <SettingButton>\n            <StyledIconSetting/>\n         </SettingButton>\n      </ChatHeader>\n      <ChatBody vh={true}>\n         <>\n            {props.dialogPage.messages.map((itm, index) => {\n               return (\n                  <ChatItem\n                     animationDelay={index + 2}\n                     key={itm.key}\n                     user={itm.type ? itm.type : \"me\"}\n                     msg={itm.msg}\n                     image={itm.image}\n                  />\n               );\n            })}\n            <div ref={messagesEndRef} />\n         </>\n      </ChatBody>\n      <ChatFooter>\n         <ChatForm addNewMessage={handleSubmit}\n         scrollToBottom={scrollToBottom}/>\n      </ChatFooter>\n   </StyledChatContainer>\n);\n}\n\nexport default ChatContent;","import React, { Component } from \"react\";\nimport Avatar from \"./Avatar\";\n\nexport default class ChatListItems extends Component {\n  constructor(props) {\n    super(props);\n  }\n  selectChat = (e) => {\n    for (\n      let index = 0;\n      index < e.currentTarget.parentNode.children.length;\n      index++\n    ) {\n      e.currentTarget.parentNode.children[index].classList.remove(\"active\");\n    }\n    e.currentTarget.classList.add(\"active\");\n  };\n\n  render() {\n    return (\n      <div\n        style={{ animationDelay: `0.${this.props.animationDelay}s` }}\n        onClick={this.selectChat}\n        className={`chatlist__item ${\n          this.props.active ? this.props.active : \"\"\n        } `}\n      >\n        <Avatar\n          image={\n            this.props.image ? this.props.image : \"http://placehold.it/80x80\"\n          }\n          isOnline={this.props.isOnline}\n        />\n\n        <div className=\"userMeta\">\n          <p>{this.props.name}</p>\n          <span className=\"activeTime\">32 mins ago</span>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./chatList.css\";\nimport ChatListItems from \"./ChatListItems\";\n\nexport default class ChatList extends Component {\n  allChatUsers = [\n    {\n      image:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTA78Na63ws7B7EAWYgTr9BxhX_Z8oLa1nvOA&usqp=CAU\",\n      id: 1,\n      name: \"Tim Hover\",\n      active: true,\n      isOnline: true,\n    },\n    {\n      image:\n        \"https://pbs.twimg.com/profile_images/1055263632861343745/vIqzOHXj.jpg\",\n      id: 2,\n      name: \"Ayub Rossi\",\n      active: false,\n      isOnline: false,\n    },\n    {\n      image:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTQEZrATmgHOi5ls0YCCQBTkocia_atSw0X-Q&usqp=CAU\",\n      id: 3,\n      name: \"Hamaad Dejesus\",\n      active: false,\n      isOnline: false,\n    },\n    {\n      image:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRZ6tM7Nj72bWjr_8IQ37Apr2lJup_pxX_uZA&usqp=CAU\",\n      id: 4,\n      name: \"Eleni Hobbs\",\n      active: false,\n      isOnline: true,\n    },\n    {\n      image:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRJo1MiPQp3IIdp54vvRDXlhbqlhXW9v1v6kw&usqp=CAU\",\n      id: 5,\n      name: \"Elsa Black\",\n      active: false,\n      isOnline: false,\n    },\n    {\n      image:\n        \"https://huber.ghostpool.com/wp-content/uploads/avatars/3/596dfc2058143-bpfull.png\",\n      id: 6,\n      name: \"Kayley Mellor\",\n      active: false,\n      isOnline: true,\n    },\n    {\n      image:\n        \"https://www.paintingcontest.org/components/com_djclassifieds/assets/images/default_profile.png\",\n      id: 7,\n      name: \"Hasan Mcculloch\",\n      active: false,\n      isOnline: true,\n    },\n    {\n      image:\n        null,\n      id: 8,\n      name: \"Autumn Mckee\",\n      active: false,\n      isOnline: false,\n    },\n    {\n      image:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSM6p4C6imkewkCDW-9QrpV-MMAhOC7GnJcIQ&usqp=CAU\",\n      id: 9,\n      name: \"Allen Woodley\",\n      active: false,\n      isOnline: true,\n    },\n    {\n      image: \"https://pbs.twimg.com/profile_images/770394499/female.png\",\n      id: 10,\n      name: \"Manpreet David\",\n      active: false,\n      isOnline: true,\n    },\n  ];\n  constructor(props) {\n    super(props);\n    this.state = {\n      allChats: this.allChatUsers,\n    };\n  }\n  render() {\n    return (\n      <div className=\"main__chatlist\">\n        <button className=\"btn\">\n          <i className=\"fa fa-plus\"></i>\n          <span>New conversation</span>\n        </button>\n        <div className=\"chatlist__heading\">\n          <h2>Chats</h2>\n          <button className=\"btn-nobg\">\n            <i className=\"fa fa-ellipsis-h\"></i>\n          </button>\n        </div>\n        <div className=\"chatList__search\">\n          <div className=\"search_wrap\">\n            <input type=\"text\" placeholder=\"Search Here\" required />\n            <button className=\"search-btn\">\n              <i className=\"fa fa-search\"></i>\n            </button>\n          </div>\n        </div>\n        <div className=\"chatlist__items\">\n          {this.state.allChats.map((item, index) => {\n            return (\n              <ChatListItems\n                name={item.name}\n                key={item.id}\n                animationDelay={index + 1}\n                active={item.active ? \"active\" : \"\"}\n                isOnline={item.isOnline ? \"active\" : \"\"}\n                image={item.image}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport { StyledWrapper } from '../../Styles';\r\nimport ChatContent from \"./Message/chatContent/ChatContent\";\r\nimport ChatList from './Message/chatList/ChatList';\r\n// import DialogItem from './DialogItem/DialogItem.jsx'\r\n\r\n\r\nconst Dialogs = (props) => {\r\n   // let state = props.dialogPage;\r\n   // let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n   \r\n   // if(props.isAuth) return <Redirect to={'/login'}/>\r\n   return (\r\n      <StyledWrapper primary={true}>\r\n                  {/* <div >\r\n                  {dialogsElements}\r\n                  </div> */}\r\n                  <ChatList />\r\n                  <ChatContent\r\n                     sendMessage={props.sendMessage}\r\n                     dialogPage={props.dialogPage}\r\n                  />\r\n      </StyledWrapper >\r\n   )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n   isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n         if(!this.props.isAuth) return <Redirect to='/login' />\r\n         return <Component {...this.props} />\r\n      }\r\n   }\r\n\r\n   let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n   return ConnectedAuthRedirectComponent;\r\n}","import Dialogs from \"./Dialogs\";\r\nimport {\r\n   sendMessageCreator,\r\n} from \"../../../Redux/dialog-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n// import { withRouter } from \"react-router\";\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      dialogPage: state.dialogPage,\r\n   };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      sendMessage: (newMessageBody) => {\r\n         dispatch(sendMessageCreator(newMessageBody))\r\n      }\r\n   }\r\n}\r\n\r\nexport default compose(\r\n   withAuthRedirect,\r\n   connect(mapStateToProps, mapDispatchToProps),\r\n   \r\n)(Dialogs);\r\n"],"sourceRoot":""}